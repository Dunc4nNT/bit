body {
  font-family: arial, sans-serif;
  color: hsl(80, 22%, 45%);
  background-color: hsl(55, 52%, 95%);
  line-height: 1.5;
  font-size: 1rem;
  font-weight: 400;
}

.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  padding-left: 8.5rem;
}

figure > img {
  max-width: 1000px;
  max-height: 1000px;
}

figure > figcaption {
  font-style: italic;
}

a {
  color: hsl(80, 22%, 15%);
}

.error-message {
  color: red;
  font-size: 1rem;
  animation: flicker 0.8s infinite;
}

@keyframes flicker {
  0%, 80% {
    opacity: 1;
  }
  95%, 100% {
    opacity: 0;
  }
}
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

body {
  min-height: 100vh;
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    scroll-behavior: auto !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
.content {
  padding-bottom: 2.5em;
  max-width: 65rem;
  padding-left: 4rem;
}

.footer {
  --flow-space: auto;
  padding: 1.5rem;
  padding-left: 3.5rem;
  display: flex;
  justify-content: left;
  gap: 5rem;
  background-color: hsl(55, 52%, 85%);
  text-align: left;
}
.footer ul {
  list-style: none;
}

.footer li {
  padding-left: 0.25rem;
}

.footer hr {
  border: 1.5px solid hsl(80, 22%, 35%);
}

.footer a {
  text-decoration: none;
  color: hsl(80, 22%, 45%);
}

.header {
  background: linear-gradient(to right, hsl(80, 22%, 35%) 45%, hsl(80, 22%, 15%));
  padding: 1.5rem;
  display: flex;
  justify-content: space-between;
}
.header h1, .header h2 {
  color: hsl(0, 0%, 95%);
}

.header h1 {
  padding: 0;
  margin: 0;
}

.header h2 {
  padding-left: 2rem;
  padding-top: 0.5rem;
}

h1, h2, h3, h4, h5, h6 {
  color: hsl(0, 0%, 15%);
  font-weight: 700;
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2.25rem;
}

h3 {
  font-size: 1.75rem;
}

h4 {
  font-size: 1.25rem;
}

h5 {
  font-size: 1.125rem;
}

h6 {
  font-size: 1rem;
}

.nav {
  position: fixed;
  height: 100vh;
  width: 10.5rem;
  transition: width 1000ms ease-in-out;
  z-index: 1;
  overflow: hidden;
  background-color: hsl(80, 22%, 35%);
}
.nav ul {
  list-style: none;
  display: flex;
  flex-flow: column;
  gap: 1rem;
}
.nav ul:first-child {
  padding-top: 8.5rem;
}
.nav li {
  display: flex;
  white-space: nowrap;
}
.nav li:is(:hover, :focus-within) {
  background: linear-gradient(90deg, hsl(80, 22%, 25%) 20%, hsl(80, 22%, 35%));
}
.nav a {
  flex-grow: 1;
  color: hsl(0, 0%, 100%);
  text-decoration: none;
  padding: 1.5rem 0;
}
.nav a:is(:hover, :focus) {
  color: hsl(55, 52%, 65%);
}
.nav img {
  padding-left: 2rem;
  vertical-align: middle;
  height: 4.5rem;
}
.nav .navbar-item-title {
  vertical-align: middle;
  visibility: hidden;
  opacity: 0;
  transition: visibility 1000ms, opacity 1000ms ease-in-out;
  padding-left: 1.5rem;
  font-size: 1.5rem;
  font-weight: 700;
}
.nav .active .nav-item-background {
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 7.5rem;
  border-radius: 0 100% 100% 0;
  background: linear-gradient(90deg, hsl(55, 52%, 65%) 20%, hsl(80, 22%, 35%));
  transition: border-radius 1000ms ease-in-out;
}
.nav .active a {
  color: hsl(80, 22%, 25%);
}
.nav .active a:is(:hover, :focus-within) {
  color: hsl(55, 52%, 65%);
  background: linear-gradient(90deg, hsl(80, 22%, 25%) 20%, hsl(80, 22%, 35%));
}
.nav:is(:hover, :focus-within) {
  width: 25rem;
}
.nav:is(:hover, :focus-within) .navbar-item-title {
  visibility: visible;
  opacity: 1;
}
.nav:is(:hover, :focus-within) .nav-item-background {
  border-radius: 0 !important;
}

@media screen and (width <= 500px) {
  .nav {
    position: fixed;
    height: 6rem;
    width: 100vh;
    transition: height 1000ms ease-in-out;
    z-index: 1;
    overflow: hidden;
    background-color: hsl(80, 22%, 35%);
  }
  .nav ul {
    list-style: none;
    display: flex;
    flex-flow: row;
    gap: 0;
  }
  .nav ul:first-child {
    padding-top: 0;
  }
  .nav li {
    display: flex;
    white-space: nowrap;
    width: 7.5rem;
  }
  .nav li:is(:hover, :focus-within) {
    background: linear-gradient(90deg, hsl(80, 22%, 25%) 20%, hsl(80, 22%, 35%));
  }
  .nav a {
    flex-grow: 1;
    color: hsl(0, 0%, 100%);
    text-decoration: none;
    padding: 1.5rem 0;
  }
  .nav a:is(:hover, :focus) {
    color: hsl(55, 52%, 65%);
  }
  .nav img {
    padding-left: 1rem;
    height: 2.5rem;
  }
  .nav .navbar-item-title {
    display: block;
    width: 7.5rem;
    visibility: hidden;
    opacity: 0;
    transition: visibility 1000ms, opacity 1000ms ease-in-out;
    padding-left: 1rem;
    font-size: 1rem;
    font-weight: 700;
  }
  .nav .active .nav-item-background {
    position: absolute;
    z-index: -1;
    height: 100%;
    width: 7.5rem;
    border-radius: 0 0 100% 100%;
    background: linear-gradient(90deg, hsl(55, 52%, 65%) 20%, hsl(80, 22%, 35%));
    transition: border-radius 1000ms ease-in-out;
  }
  .nav .active a {
    color: hsl(80, 22%, 25%);
  }
  .nav .active a:is(:hover, :focus-within) {
    color: hsl(55, 52%, 65%);
    background: linear-gradient(90deg, hsl(80, 22%, 25%) 20%, hsl(80, 22%, 35%));
  }
  .nav:is(:hover, :focus-within) {
    height: 7rem;
    width: 100vh;
  }
  .nav:is(:hover, :focus-within) .navbar-item-title {
    visibility: visible;
    opacity: 1;
  }
  .nav:is(:hover, :focus-within) .nav-item-background {
    border-radius: 0 !important;
  }
}
.logo {
  width: 3rem;
  height: 3rem;
  background: #a4b365;
  background-size: 6rem;
  vertical-align: middle;
  border-radius: 60px;
  padding: 0.2rem;
}

.file-upload-box {
  position: relative;
  width: 25rem;
  height: auto;
  min-height: 20rem;
  padding-bottom: 3rem; /* extra space for the submit button */
  background-color: hsl(55, 52%, 85%);
  border-radius: 1rem;
}
.file-upload-box p {
  background-color: hsl(80, 22%, 45%);
  color: hsl(0, 0%, 100%); /* text color */
  padding-left: 2rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  border-radius: 1rem 1rem 0 0;
}
.file-upload-box p img {
  position: absolute;
  right: 2rem;
  padding-bottom: 0.5rem;
  height: 2rem;
}

label[for=files] {
  position: absolute;
  top: 4rem;
  left: 2rem;
}

label[for=files]::file-selector-button {
  display: none;
}

.file-upload-button {
  display: block;
  position: absolute;
  bottom: 4rem;
  left: 2rem;
  width: 21rem;
  height: 5rem;
  text-align: center;
  align-content: center;
  border-style: dashed;
  border-color: hsl(80, 22%, 45%);
  border-width: 0.25rem;
  border-radius: 1rem;
  cursor: pointer;
}

.file-upload-button:hover {
  border-color: hsl(80, 22%, 35%);
  color: hsl(80, 22%, 35%); /* text color */
}

#file-submit {
  display: none;
}

.submit-button {
  display: block;
  position: absolute;
  left: 10rem;
  bottom: 1rem;
  width: 5rem;
  height: auto;
  text-align: center;
  color: hsl(0, 0%, 100%); /* text color */
  background-color: hsl(80, 22%, 45%);
  border-radius: 1rem;
  cursor: pointer;
}
.submit-button:hover {
  background-color: hsl(80, 22%, 35%);
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  width: 25rem;
  height: 1.5rem;
  padding-left: 1.8rem;
  margin-bottom: 0.2rem;
  cursor: pointer;
  font-size: 1rem;
  background-color: hsl(55, 52%, 75%);
  color: hsl(80, 22%, 35%);
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.container:hover {
  background-color: hsl(80, 22%, 65%);
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 1.5rem;
  width: 1.5rem;
  background-color: hsl(80, 22%, 65%);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: hsl(80, 22%, 65%);
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: hsl(80, 22%, 35%);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark::after {
  content: "";
  position: absolute;
  display: none;
}

/* Style the checkmark/indicator */
.container .checkmark::after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark::after {
  display: block;
}

.container-wrapper {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.viz-image {
  width: 100%;
  height: auto;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1em);
}

/*# sourceMappingURL=main.css.map */
